<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="OUTPUT_MATERIAL" loc="546, 298" />
		<node type="MIX_SHADER" fac="0.20000" loc="326, 327" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" loc="122, 305" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" loc="127, 154" />
		<node type="TEX_MAGIC" depth="3" scale="10.0" distortion="1.0" loc="-649, -209" />
		<node type="SCRIPT" mode="INTERNAL" script="0" warpcolor="rgba(0.80000, 0.0, 0.0, 1.0)" weftcolor="rgba(0.0, 0.80000, 0.0, 1.0)" skip="3" underrun="2" overrun="2" warpwidth="0.89999" weftwidth="0.59999" coordinates="Vector(0.0, 0.0, 0.0)" loc="-106, 239" />
		<node type="VALTORGB" interpolation="LINEAR" fac="0.5" stops="3" stop1="0.0|rgba(0.45888, 0.27226, 0.26589, 1.0)" stop2="0.5|rgba(0.5, 0.22469, 0.15275, 1.0)" stop3="1.0|rgba(1.0, 1.0, 1.0, 1.0)" loc="-418, -82" />
		<node type="TEX_MUSGRAVE" musgrave="FBM" scale="1.0" detail="2.0" dimension="2.0" lacunarity="1.0" offset="0.0" gain="1.0" loc="-1061, -50" />
		<node type="VALTORGB" interpolation="LINEAR" fac="0.5" stops="3" stop1="0.0|rgba(0.69454, 0.56581, 0.30919, 1.0)" stop2="0.5|rgba(0.5, 0.41093, 0.17475, 1.0)" stop3="1.0|rgba(1.0, 1.0, 1.0, 1.0)" loc="-850, -3" />
		<node type="MAPPING" translation="Vector(0.0, 0.0, 0.0)" rotation="Vector(0.0, 0.0, 0.0)" scale="Vector(50.0, 50.0, 50.0)" use_min="False" use_max="False" vector="Vector(0.0, 0.0, 0.0)" loc="-591, 277" />
		<node type="TEX_COORD" dupli="False" loc="-1268, 50" />
	</nodes>
	<links>
		<link to="1" input="1" from="2" output="0" />
		<link to="0" input="0" from="1" output="0" />
		<link to="0" input="2" from="5" output="2" />
		<link to="2" input="0" from="5" output="0" />
		<link to="3" input="0" from="8" output="0" />
		<link to="3" input="2" from="5" output="1" />
		<link to="1" input="2" from="3" output="0" />
		<link to="6" input="0" from="4" output="1" />
		<link to="8" input="0" from="7" output="1" />
		<link to="5" input="1" from="8" output="0" />
		<link to="5" input="7" from="9" output="0" />
		<link to="5" input="0" from="6" output="0" />
		<link to="9" input="0" from="10" output="2" />
		<link to="7" input="0" from="10" output="2" />
	</links>
	<scripts>
		<script name="fabric.osl.000" id="0">
<br /><br /><br /><br />// greatest common divisor<br />int gcd(int A, int B){<br />    int a=A, b=B;<br />    if (a == 0) { return b; }<br />    while (b != 0) {<br />        if (a &gt; b) {<br />            a = a - b;<br />        } else {<br />            b = b - a;<br />        }<br />    }<br /> return a;<br />}<br /><br />// smallest common multiple (assumes a, b &gt; 0 )<br />int scm(int a, int b){ return a*b/gcd(a,b); }<br /><br />shader weave(<br /> color WarpColor = color(0.8,0,0),<br /> color WeftColor = color(0,0.8,0),<br /> int skip = 1,<br /> int underrun = 1,<br /> int overrun = 1,<br />        float WarpWidth = 0.8,<br />        float WeftWidth = 0.8,<br /> vector Coordinates = 0,<br /> output color Color = 0,<br /> output int Index = 0,<br />        output float Dist = 0<br />)<br />{<br /> int ny = underrun + overrun;<br /> int nx = scm(skip,ny);<br /> <br /> float x = mod(Coordinates[0],1.0);<br /> float y = mod(Coordinates[1],1.0);<br /> <br /> int ix = int(floor(x*nx));<br /> int iy = int(floor(y*ny));<br /><br />        float cx = mod(x*nx,1.0);<br />        float cy = mod(y*ny,1.0);<br />     <br /> int top;<br /> top = ((iy+skip*ix)%ny) &lt; overrun;<br /><br />        float lx = (1-WarpWidth)/2;<br />        float hx = 1-lx;<br />    float ly = (1-WeftWidth)/2;<br />    float hy = 1-lx;<br /><br />    if (top) {<br />        if ( cx &gt; lx &amp;&amp; cx &lt; hx ){<br />            Index = 1;<br />            Color = WarpColor;<br />            Dist = abs(0.5-cx);<br />        } else if (cy &gt; ly &amp;&amp; cy &lt; hy ){<br />            Index = 2;<br />            Color = WeftColor;<br />            Dist = abs(0.5-cy);<br />        }<br />    } else {<br />        if (cy &gt; ly &amp;&amp; cy &lt; hy ){<br />            Index = 2;<br />            Color = WeftColor;<br />            Dist = abs(0.5-cy);<br />        } else if ( cx &gt; lx &amp;&amp; cx &lt; hx ){<br />            Index = 1;<br />            Color = WarpColor;<br />            Dist = abs(0.5-cx);<br />        }<br />    }    <br />}<br /><br />		<br />		<br />		<br />		
		</script>
	</scripts>
</material>